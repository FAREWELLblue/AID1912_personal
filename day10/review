前情回顾

1.multiprocessing模块创建进程
    Process() 创建进程对象
    start() 启动进程
    join() 阻塞等待回收进程
2.进程对象属性和进程池
    pid：进程PID号
    daemon：父进程退出是他创建的这个子进程也退出
    自定义进程类：进程Process--重写__init__和run方法
3.进程池
    Pool()创建进程池
    apply_async()向进程池中添加任务
    close()关闭进程池，关闭后不可再添加新任务
    join()等待进程结束回收进程
4.线程
    * 线程也是多任务编程方式，指可以利用多个cpu多个任务可以同时执行互不影响
    * 一个进程包含多个线程，线程是进程的一部分，共享进程的资源
    * 线程本身拥有各自的命令集和属性id等

    Thread()
    start()
    join()
5.线程属性和自定义线程类
